{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nexports.wrapInterop = wrapInterop;\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _template = _interopRequireDefault(require(\"@babel/template\"));\n\nvar _chunk = _interopRequireDefault(require(\"lodash/chunk\"));\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = _interopRequireDefault(require(\"./rewrite-this\"));\n\nvar _rewriteLiveReferences = _interopRequireDefault(require(\"./rewrite-live-references\"));\n\nvar _normalizeAndLoadMetadata = _interopRequireWildcard(require(\"./normalize-and-load-metadata\"));\n\nvar _getModuleName = _interopRequireDefault(require(\"./get-module-name\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  loose,\n  noInterop,\n  lazy,\n  esNamespaceOnly\n}) {\n  (0, _assert.default)((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    noInterop,\n    loose,\n    lazy,\n    esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, loose));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, loose));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return t.callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, loose = false) {\n  const statements = [];\n  let srcNamespace = t.identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (loose) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, loose));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), loose);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  loose: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  looseComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: (0, _template.default)`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, loose) => {\n  const namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT;\n\n    if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = t.memberExpression(t.cloneNode(namespace), t.stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = NAMESPACE_IMPORT = t.memberExpression(t.cloneNode(namespace), t.identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (loose) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.looseComputed(astNodes);\n      } else {\n        return ReexportTemplate.loose(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerable = false) {\n  return (enumerable ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, loose) {\n  return (loose ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: t.variableDeclaration(\"var\", [t.variableDeclarator(name, t.valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, loose = false) {\n  const initStatements = [];\n  const exportNames = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));\n    } else {\n      exportNames.push(...data.names);\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!loose) {\n      initStatements.push(...buildReexportsFromMeta(metadata, data, loose));\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportNames.push(exportName);\n    }\n  }\n\n  initStatements.push(...(0, _chunk.default)(exportNames, 100).map(members => {\n    return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());\n  }));\n  return initStatements;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return t.expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}","map":{"version":3,"sources":["C:/Users/sp479/Desktop/react js/movie_suggetion/node_modules/@babel/helper-module-transforms/lib/index.js"],"names":["Object","defineProperty","exports","value","rewriteModuleStatementsAndPrepareHeader","ensureStatementsHoisted","wrapInterop","buildNamespaceInitStatements","enumerable","get","_helperModuleImports","isModule","_rewriteThis","default","_normalizeAndLoadMetadata","hasExports","isSideEffectImport","_getModuleName","_assert","_interopRequireDefault","require","t","_interopRequireWildcard","_template","_chunk","_rewriteLiveReferences","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","path","exportName","strict","allowTopLevelThis","strictMode","loose","noInterop","lazy","esNamespaceOnly","node","sourceType","meta","hasStrict","directives","some","directive","unshiftContainer","directiveLiteral","headers","push","buildESModuleHeader","nameList","buildExportNameListDeclaration","exportNameListName","name","statement","buildExportInitializationStatements","statements","forEach","header","_blockHoist","programPath","expr","type","helper","Error","callExpression","hub","addHelper","metadata","sourceMetadata","srcNamespace","identifier","localName","importsNamespace","NAME","SOURCE","cloneNode","buildReexportsFromMeta","reexportNamespace","EXPORTS","NAMESPACE","reexportAll","buildNamespaceReexport","loc","ReexportTemplate","looseComputed","spec","namespace","stringSpecifiers","Array","from","reexports","importName","NAMESPACE_IMPORT","memberExpression","stringLiteral","astNodes","EXPORT_NAME","VERIFY_NAME_LIST","EXPORTS_LIST","exportedVars","create","data","local","values","names","hasReexport","source","keys","length","scope","generateUidIdentifier","variableDeclaration","variableDeclarator","valueToNode","initStatements","exportNames","kind","buildInitStatement","map","members","buildUndefinedNode","InitTemplate","computed","expression","initExpr","expressionStatement","reduce","acc","params","VALUE"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nexports.wrapInterop = wrapInterop;\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _template = _interopRequireDefault(require(\"@babel/template\"));\n\nvar _chunk = _interopRequireDefault(require(\"lodash/chunk\"));\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = _interopRequireDefault(require(\"./rewrite-this\"));\n\nvar _rewriteLiveReferences = _interopRequireDefault(require(\"./rewrite-live-references\"));\n\nvar _normalizeAndLoadMetadata = _interopRequireWildcard(require(\"./normalize-and-load-metadata\"));\n\nvar _getModuleName = _interopRequireDefault(require(\"./get-module-name\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  loose,\n  noInterop,\n  lazy,\n  esNamespaceOnly\n}) {\n  (0, _assert.default)((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    noInterop,\n    loose,\n    lazy,\n    esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, loose));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, loose));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return t.callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, loose = false) {\n  const statements = [];\n  let srcNamespace = t.identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (loose) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, loose));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), loose);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  loose: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  looseComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: (0, _template.default)`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, loose) => {\n  const namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT;\n\n    if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = t.memberExpression(t.cloneNode(namespace), t.stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = NAMESPACE_IMPORT = t.memberExpression(t.cloneNode(namespace), t.identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (loose) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.looseComputed(astNodes);\n      } else {\n        return ReexportTemplate.loose(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerable = false) {\n  return (enumerable ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, loose) {\n  return (loose ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: t.variableDeclaration(\"var\", [t.variableDeclarator(name, t.valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, loose = false) {\n  const initStatements = [];\n  const exportNames = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));\n    } else {\n      exportNames.push(...data.names);\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!loose) {\n      initStatements.push(...buildReexportsFromMeta(metadata, data, loose));\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportNames.push(exportName);\n    }\n  }\n\n  initStatements.push(...(0, _chunk.default)(exportNames, 100).map(members => {\n    return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());\n  }));\n  return initStatements;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return t.expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}"]},"metadata":{},"sourceType":"script"}